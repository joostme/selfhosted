services:
  traefik:
    container_name: traefik
    image: traefik
    command:
      # Docker
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=proxy"

      # Entrypoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.asdefault=true"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certresolver=letsencrypt"
      - "--entrypoints.websecure.http.tls.domains[0].main=${DOMAIN}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.${DOMAIN}"

      # Certs
      - "--certificatesresolvers.letsencrypt=true"
      - "--certificatesresolvers.letsencrypt.acme.email=webmaster@${DOMAIN}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/certificates/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=porkbun"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1,1.0.0.1"

      # Logs
      - "--log.level=${LOG_LEVEL}"
    restart: always
    volumes:
      - certificates:/certificates
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      proxy:
      br0:
        ipv4_address: ${TRAEFIK_IP}
    env_file: .env 
    labels:
      glance.name: Traefik
      glance.icon: sh:traefik
      glance.url: https://${SERVICE_URL}
      net.unraid.docker.icon: https://cdn.jsdelivr.net/gh/selfhst/icons/png/traefik.png
      net.unraid.docker.webui: https://${SERVICE_URL}


  authentik-proxy:
    image: ghcr.io/goauthentik/proxy
    environment:
        AUTHENTIK_HOST: https://auth.${DOMAIN}
        AUTHENTIK_INSECURE: "false"
        AUTHENTIK_TOKEN: ${AUTHENTIK_TOKEN}
    labels:
        traefik.enable: true
        traefik.port: 9000
        traefik.http.routers.authentik.rule: Host(`auth.${DOMAIN}`) && PathPrefix(`/outpost.goauthentik.io/`)
        traefik.http.middlewares.authentik.forwardauth.address: http://authentik-proxy:9000/outpost.goauthentik.io/auth/traefik
        traefik.http.middlewares.authentik.forwardauth.trustForwardHeader: true
        traefik.http.middlewares.authentik.forwardauth.authResponseHeaders: X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-jwt,X-authentik-meta-jwks,X-authentik-meta-outpost,X-authentik-meta-provider,X-authentik-meta-app,X-authentik-meta-version
    restart: unless-stopped
    networks:
      - default

networks:
  proxy:
    external: true
  br0:
    external: true

volumes:
  certificates:
    name: certificates
[[stack]]
name = "adguard"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/adguard"
file_paths = ["docker-compose.yml"]
environment = """
SERVICE_URL_ADGUARD=adguard.[[DOMAIN]]
SERVICE_URL_ADGUARD_SYNC=adguard-sync.[[DOMAIN]]

DOMAIN=[[DOMAIN]]
APPDATA_PATH=[[APPDATA_PATH]]

ADGUARD_IP=[[ADGUARD_IP]]

ORIGIN_URL=http://[[ADGUARD_ORIGIN_IP]]
ORIGIN_USERNAME=[[ADGUARD_ORIGIN_USER]]
ORIGIN_PASSWORD=[[ADGUARD_ORIGIN_PASS]]

REPLICA1_URL=http://adguard
REPLICA1_USERNAME=[[ADGUARD_REPLICA_USER]]
REPLICA1_PASSWORD=[[ADGUARD_REPLICA_PASS]]

CRON="0 */2 * * *"
"""

##

[[stack]]
name = "arr"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/arr"
file_paths = ["docker-compose.yml"]
environment = """
DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]

SERVICE_URL_SONARR=sonarr.[[DOMAIN]]
SERVICE_URL_RADARR=radarr.[[DOMAIN]]
SERVICE_URL_LIDARR=lidarr.[[DOMAIN]]
SERVICE_URL_SABNZBD=sabnzbd.[[DOMAIN]]
SERVICE_URL_DELUGE=deluge.[[DOMAIN]]

TRAEFIK_AUTH_BYPASS_KEY=[[TRAEFIK_AUTH_BYPASS_KEY]]
"""

##

[[stack]]
name = "asf"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/asf"
file_paths = ["docker-compose.yml"]
environment = """
ASF_USER=[[PUID]]
SERVICE_URL=asf.[[DOMAIN]]

DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]
"""

##

[[stack]]
name = "audiobookshelf"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/audiobookshelf"
file_paths = ["docker-compose.yml"]
environment = """
DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]
SERVICE_URL=audiobookshelf.[[DOMAIN]]
"""

##

[[stack]]
name = "calibre"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/calibre"
file_paths = ["docker-compose.yml"]
environment = """
DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]
# Calibre
SERVICE_URL_CALIBRE=calibre.[[DOMAIN]]
SERVICE_URL_CALIBRE_VNC=calibre-vnc.[[DOMAIN]]
"""

##

[[stack]]
name = "dozzle"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/dozzle"
file_paths = ["docker-compose.yml"]
environment = """
DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]
SERVICE_URL=dozzle.[[DOMAIN]]
"""

##

[[stack]]
name = "forgejo"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/forgejo"
file_paths = ["docker-compose.yml"]
environment = """
DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]
SERVICE_URL=git.[[DOMAIN]]

USER_UID=${PUID}
USER_GID=${PGID}

ROOT_URL=https://${SERVICE_URL}
"""

##

[[stack]]
name = "glance"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/glance"
file_paths = ["docker-compose.yml"]
environment = """
DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]
SERVICE_URL=glance.[[DOMAIN]]
"""

##

[[stack]]
name = "immich"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/immich"
file_paths = ["docker-compose.yml"]
environment = """
DB_HOSTNAME=postgres_immich
DB_USERNAME=postgres
DB_PASSWORD=[[IMMICH_DB_PASS]]
DB_DATABASE_NAME=immich
DB_PORT=5432
REDIS_HOSTNAME=redis
REDIS_PORT=6379
SERVER_HOST=0.0.0.0

MACHINE_LEARNING_HOST=0.0.0.0
MACHINE_LEARNING_PORT=3003
MACHINE_LEARNING_WORKERS=1
MACHINE_LEARNING_WORKER_TIMEOUT=120

POSTGRES_PASSWORD=${DB_PASSWORD}
POSTGRES_USER=postgres
POSTGRES_DB=immich

DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]
SERVICE_URL=immich.[[DOMAIN]]
"""

##

[[stack]]
name = "jellyfin"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/jellyfin"
file_paths = ["docker-compose.yml"]
environment = """
DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]

JELLYFIN_IP=[[JELLYFIN_IP]]
JELLYFIN_PublishedServerUrl=${JELLYFIN_IP}
SERVICE_URL=jellyfin.[[DOMAIN]]
"""

##

[[stack]]
name = "karakeep"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/karakeep"
file_paths = ["docker-compose.yml"]
environment = """
DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]

SERVICE_URL=karakeep.[[DOMAIN]]

NEXTAUTH_SECRET=[[KARAKEEP_NEXTAUTH_SECRET]]
MEILI_MASTER_KEY=[[KARAPKEEP_MEILI_MASTER_KEY]]
NEXTAUTH_URL=https://${SERVICE_URL}

DISABLE_SIGNUPS=true
DISABLE_PASSWORD_AUTH=true
OAUTH_WELLKNOWN_URL=https://id.${DOMAIN}/.well-known/openid-configuration
OAUTH_CLIENT_SECRET=[[KARAKEEP_OAUTH_SECRET]]
OAUTH_CLIENT_ID=karakeep
OAUTH_PROVIDER_NAME=SSO
OAUTH_ALLOW_DANGEROUS_EMAIL_ACCOUNT_LINKING=true
OAUTH_TIMEOUT=30000
"""
##

[[stack]]
name = "navidrome"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/navidrome"
file_paths = ["docker-compose.yml"]
environment = """
ND_DATAFOLDER=/config
ND_MUSICFOLDER=/data/media/music
ND_ENABLEINSIGHTSCOLLECTOR=false
ND_REVERSEPROXYWHITELIST: 0.0.0.0/0
ND_ENABLEUSEREDITING: false

SERVICE_URL=navidrome.[[DOMAIN]]

DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]
"""

##

[[stack]]
name = "paperless"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/paperless"
file_paths = ["docker-compose.yml"]
environment = """
DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]

PAPERLESS_REDIS=redis://redis:6379
PAPERLESS_OCR_LANGUAGE=deu
PAPERLESS_TIME_ZONE=${TZ}
PAPERLESS_CONSUMER_ENABLE_BARCODES=1
PAPERLESS_CONSUMER_ENABLE_ASN_BARCODE=1
PAPERLESS_URL=https://paperless.${DOMAIN}
PAPERLESS_SECRET_KEY=[[PAPERLESS_SECRET_KEY]]

SERVICE_URL=paperless.[[DOMAIN]]

PAPERLESS_APPS=allauth.socialaccount.providers.openid_connect
PAPERLESS_SOCIALACCOUNT_PROVIDERS = {"openid_connect": {"SCOPE": ["openid","profile","email","groups"], "APPS": [{"provider_id": "pocketid","name": "SSO","client_id": "paperless","secret": "[[PAPERLESS_OAUTH_SECRET]]","settings": {"server_url": "https://id.${DOMAIN}/.well-known/openid-configuration"}}]}}
PAPERLESS_SOCIAL_AUTO_SIGNUP=true
PAPERLESS_DISABLE_REGULAR_LOGIN=true
PAPERLESS_REDIRECT_LOGIN_TO_SSO=true
"""

##

[[stack]]
name = "pocketid"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/pocketid"
file_paths = ["docker-compose.yml"]
environment = """
DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]
SERVICE_URL=id.[[DOMAIN]]

APP_URL=https://${SERVICE_URL}
TRUST_PROXY=true
MAXMIND_LICENSE_KEY=
ENCRYPTION_KEY=[[POCKET_ID_ENCRYPTION_KEY]]
"""


##

[[stack]]
name = "redis"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/redis"
file_paths = ["docker-compose.yml"]
environment = """
DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]
"""

##

[[stack]]
name = "satisfactory-server"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/satisfactory-server"
file_paths = ["docker-compose.yml"]
environment = """
DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]

MAXPLAYERS=4
STEAMBETA=false
SATISFACTORY_IP=[[SATISFACTORY_IP]]
"""
##

[[stack]]
name = "syncthing"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/syncthing"
file_paths = ["docker-compose.yml"]
environment = """
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
PUID=[[PUID]]
PGID=[[PGID]]
DOMAIN=[[DOMAIN]]
SERVICE_URL=syncthing.[[DOMAIN]]
"""

##

[[stack]]
name = "tandoor"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/tandoor"
file_paths = ["docker-compose.yml"]
environment = """
APPDATA_PATH=[[APPDATA_PATH]]
TZ=[[TZ]]
SERVICE_URL=recipes.[[DOMAIN]]

DB_ENGINE=django.db.backends.sqlite3
SECRET_KEY=[[TANDOOR_SECRET_KEY]]
ALLOWED_HOSTS=${SERVICE_URL}
POSTGRES_DB=/data/recipes.db
GUNICORN_MEDIA=1
GUNICORN_WORKERS=1
GUNICORN_THREADS=1

SOCIAL_PROVIDERS=allauth.socialaccount.providers.openid_connect
SOCIALACCOUNT_PROVIDERS = {"openid_connect": { "OAUTH_PKCE_ENABLED": True, "SCOPE": ["openid","profile","email","groups"], "APPS": [{"provider_id": "pocketid","name": "SSO","client_id": "tandoor","secret": "[[TANDOOR_OAUTH_SECRET]]","settings": {"server_url": "https://id.${DOMAIN}/.well-known/openid-configuration"}}]}}
"""

##

[[stack]]
name = "teddycloud"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/teddycloud"
file_paths = ["docker-compose.yml"]
environment = """
DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]

TEDDYCLOUD_IP=[[TEDDYCLOUD_IP]]
SERVICE_URL=teddycloud.[[DOMAIN]]
"""

##

[[stack]]
name = "tinyauth"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/tinyauth"
file_paths = ["docker-compose.yml"]
environment = """
DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]

SERVICE_URL=tinyauth.[[DOMAIN]]

APP_URL=https://${SERVICE_URL}
APP_TITLE=SSO
USERS=[[TINYAUTH_USER]]

PROVIDERS_POCKETID_CLIENT_ID=tinyauth
PROVIDERS_POCKETID_CLIENT_SECRET=[[TINYAUTH_CLIENT_SECRET]]
PROVIDERS_POCKETID_SCOPES=openid email profile groups
PROVIDERS_POCKETID_AUTH_URL=https://id.${DOMAIN}/authorize
PROVIDERS_POCKETID_TOKEN_URL=https://id.${DOMAIN}/api/oidc/token
PROVIDERS_POCKETID_USER_INFO_URL=https://id.${DOMAIN}/api/oidc/userinfo
PROVIDERS_POCKETID_NAME=SSO

OAUTH_AUTO_REDIRECT=POCKETID
SECURE_COOKIE=true
"""

##

[[stack]]
name = "traefik"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/traefik"
file_paths = ["docker-compose.yml"]
environment = """
DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]

PORKBUN_API_KEY=[[PORKBUN_API_KEY]]
PORKBUN_SECRET_API_KEY=[[PORKBUN_SECRET_API_KEY]]

SERVICE_URL=traefik.[[DOMAIN]]
"""

##

[[stack]]
name = "tubearchivist"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/tubearchivist"
file_paths = ["docker-compose.yml"]
environment = """
DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]


TA_HOST=https://tubearchivist.${DOMAIN}
TA_LOGIN_AUTH_MODE=forwardauth
TA_ENABLE_AUTH_PROXY=true
TA_AUTH_PROXY_USERNAME_HEADER=HTTP_REMOTE_USER
TA_USERNAME=admin
TA_PASSWORD=changeme
HOST_UID=${PUID}
HOST_GID=${PGID}
REDIS_CON=redis://archivist-redis:6379
ES_URL=http://archivist-es:9200
ELASTIC_PASSWORD=verysecret

SERVICE_URL=tubearchivist.[[DOMAIN]]
"""

##

[[stack]]
name = "unmanic"
[stack.config]
server = "nas"
linked_repo = "selfhosted"
run_directory = "services/unmanic"
file_paths = ["docker-compose.yml"]
environment = """
DOMAIN=[[DOMAIN]]
TZ=[[TZ]]
PUID=[[PUID]]
PGID=[[PGID]]
UMASK=[[UMASK]]
MNT_PATH=[[MNT_PATH]]
APPDATA_PATH=[[APPDATA_PATH]]
DATA_PATH=[[DATA_PATH]]

SERVICE_URL=unmanic.[[DOMAIN]]
"""
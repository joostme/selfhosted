services:
  dockerproxy:
    image: ghcr.io/wollomatic/socket-proxy:1.10.0
    restart: unless-stopped
    user: "65534:281"
    mem_limit: 64M
    read_only: true
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges
    command:
      - '-loglevel=info'
      - '-listenip=0.0.0.0'
      - '-allowfrom=backrest'
      - '-allowGET=/v1\..{1,2}/(info|containers/.*|exec/.*)|/_ping'
      - '-allowHEAD=/_ping'
      - '-allowPOST=/v1\..{1,2}/(exec/.*|containers/(paperless|postgres_immich)/(exec|start|stop|pause|unpause))'
      - '-allowbindmountfrom=/var/log,/tmp'
      - '-watchdoginterval=3600'
      - '-stoponwatchdog'
      - '-shutdowngracetime=5'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - docker-proxynet

  backrest:
    image: garethgeorge/backrest:v1.10.0
    container_name: backrest
    hostname: backrest
    volumes:
      - ${APPDATA_PATH}/backrest/data:/data
      - ${APPDATA_PATH}/backrest/config:/config
      - ${APPDATA_PATH}/backrest/cache:/cache
      - ${APPDATA_PATH}/backrest/tmp:/tmp
      - ${APPDATA_PATH}:/userdata/appdata:ro  # Mount local paths to backup
      - ${MNT_PATH}/photos:/userdata/photos:ro
      - ${MNT_PATH}/paperless:/userdata/paperless:ro
      - ${MNT_PATH}/Syncthing:/userdata/Syncthing:ro
    env_file: .env
    environment:
      - BACKREST_DATA=/data
      - BACKREST_CONFIG=/config/config.json
      - XDG_CACHE_HOME=/cache
      - TMPDIR=/tmp
      - TZ=Europe/Berlin
      - DOCKER_HOST=tcp://dockerproxy:2375
    restart: unless-stopped
    networks:
      - proxy
      - docker-proxynet
    labels:
      traefik.enable: true
      traefik.http.routers.backrest.tls: true
      traefik.http.routers.backrest.tls.certresolver: letsencrypt
      traefik.http.routers.backrest.rule: Host(`${SERVICE_URL}`)
      traefik.http.routers.backrest.entrypoints: websecure
      traefik.http.routers.backrest.service: backrest
      traefik.http.services.backrest.loadbalancer.server.port: 9898
      traefik.http.routers.backrest.middlewares: tinyauth

      tinyauth.apps.backrest.config.domain: ${SERVICE_URL}
      tinyauth.apps.backrest.oauth.groups: admin

      glance.name: Backrest
      glance.icon: sh:backrest
      glance.url: https://${SERVICE_URL}
      net.unraid.docker.icon: https://cdn.jsdelivr.net/gh/selfhst/icons/png/backrest.png
      net.unraid.docker.webui: https://${SERVICE_URL}
networks:
  proxy:
    external: true
  docker-proxynet:
    driver: bridge
    internal: true